---

import LanguageSelect from '@astrojs/starlight/components/LanguageSelect.astro'
import Search from '@astrojs/starlight/components/Search.astro'
import SocialIcons from '@astrojs/starlight/components/SocialIcons.astro'
import type { Props } from '@astrojs/starlight/props'
import { MoreSingle } from '@univerjs/icons'
import { getLangFromUrl, useI18nUrl, useTranslations } from '../i18n/utils'
import SiteTitle from './SiteTitle.astro'
import ThemeSelect from './ThemeSelect.astro'

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)
const l = useI18nUrl(lang)

const isApiPage = Astro.url.pathname.startsWith(`/${lang}/api`) || Astro.url.pathname.startsWith('/api')
const isProPage = Astro.url.pathname.startsWith('/pro')
---

<div class="header">
  <div class="title-wrapper">
    <SiteTitle {...Astro.props} />
  </div>

  <div class="sl-hidden md:sl-flex right-group">
    <nav class="nav">
      <a class:list={[{ active: !isApiPage && !isProPage }]} href={l('/guides/introduction')}>
        {t('startlight.header.guides')}
      </a>
      <a class:list={[{ active: isApiPage }]} href={l('/api')}>
        {t('startlight.header.api')}
      </a>
      <a href="/playground">
        {t('startlight.header.playground')}
      </a>
      <a class:list={[{ active: isProPage }]} href={`/pro/${lang === 'en-us' ? '' : `${lang}/`}enterprises/`}>
        Pro
      </a>
      <div class="community-list">
        <a data-community-btn>
          {t('startlight.header.community')}
          <MoreSingle />
        </a>

        <ul data-community-list>
          <li>
            <a href={l('/blog')}>{t('startlight.header.community.blog')}</a>
          </li>
          <li>
            <a href="https://discord.gg/z3NKNT6D2f">{t('startlight.header.community.discord')}</a>
          </li>
          <li>
            <a href="https://github.com/dream-num/univer/discussions">{t('startlight.header.community.github')}</a>
          </li>
          <li>
            <a>{t('startlight.header.community.concat')}</a>
          </li>
        </ul>
      </div>
    </nav>

    <ThemeSelect {...Astro.props} />

    <LanguageSelect {...Astro.props} />

    <div class="sl-flex search">
      <Search {...Astro.props} />
    </div>

    <div class="sl-flex social-icons">
      <SocialIcons {...Astro.props} />
    </div>
  </div>
</div>

<script>
const $btn = document.querySelector('[data-community-btn]')
const $list = document.querySelector('[data-community-list]')

document.body.addEventListener('click', (e) => {
  $list?.classList.remove('active')
})

$btn?.addEventListener('click', (e) => {
  e.stopPropagation()
  $list?.classList.toggle('active')
})

$list?.addEventListener('click', (e) => {
  e.stopPropagation()
})
</script>

<style lang="less" scoped>
.header {
  display: flex;
  justify-content: space-between;

  .right-group {
    display: flex;
    align-items: center;
    gap: 1rem;

    .nav {
      font-size: 0.875rem;
      display: none;
      gap: 1rem;
      @media (min-width: 50rem) {
        display: flex;
      }

      a {
        color: inherit;
        text-decoration: none;
        cursor: pointer;
        &:hover {
          color: var(--sl-color-white);
        }

        &.active {
          font-weight: 600;
        }
      }

      .community-list {
        position: relative;
        display: none;
        @media (min-width: 50rem) {
          display: block;
        }

        :global(svg) {
          position: relative;
          top: 2px;
          transform: rotate(90deg);
        }

        ul {
          position: absolute;
          height: 0;
          background-color: var(--sl-color-bg);
          border-radius: 8px;
          list-style: none;
          display: grid;
          overflow: hidden;
          gap: 0.6rem;
          transition: height 0.15s;
          z-index: 10;

          &:global(.active) {
            height: auto !important;
            padding: 0.4rem;
            border: 1px solid #e5e5e5;
          }

          li {
            > a {
              white-space: nowrap;
              display: block;
              &:hover {
                color: var(--sl-color-white);
              }
            }
          }
        }
      }
    }

    .search {
      :global(site-search) {
        :global(button[data-open-modal]) {
          width: 36px;
          height: 36px;
          border-radius: 40px;
          @media (min-width: 50rem) {
            width: 142px;
          }
        }
      }
    }

    .social-icons {
      :global(a) {
        color: inherit;
        font-size: 24px;
      }
    }

    :global(starlight-theme-select) {
      display: none;
      @media (min-width: 50rem) {
        display: block;
      }
      :global(svg) {
        width: 1rem;
        height: 1rem;
      }
      :global(select) {
        padding-left: 1rem;
        padding-right: 1rem;
        width: 1rem;
        color: transparent;
      }
    }

    :global(starlight-lang-select) {
      display: none;
      @media (min-width: 50rem) {
        display: block;
      }
      :global(svg) {
        width: 1rem;
        height: 1rem;
      }
      :global(select) {
        padding-left: 1rem;
        padding-right: 1rem;
        width: 1rem;
        color: transparent;
      }
    }
  }
}
</style>
